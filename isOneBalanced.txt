using System;
using System.Collections.Generic;
using System.Linq;

// To execute C#, please define "static void Main" on a class
// named Solution.

class Solution
{
    static void Main(string[] args)
    {
        Console.WriteLine(isOneBalanced(new int[] { 1, 1, 1, 2, 3, -18, 45, 1 }));
            Console.WriteLine(isOneBalanced(new int[] { 1, 1, 1, 2, 3, -18, 45, 1, 0 }));
            Console.WriteLine(isOneBalanced(new int[] { 1, 1, 2, 3, 1, -18, 26, 1 }));
            Console.WriteLine(isOneBalanced(new int[] { }));
            Console.WriteLine(isOneBalanced(new int[] { 3, 4, 1, 1 }));
            Console.WriteLine(isOneBalanced(new int[] { 1, 1, 3, 4 }));
            Console.WriteLine(isOneBalanced(new int[] { 3, 3, 3, 3, 3, 3 }));
            Console.WriteLine(isOneBalanced(new int[] { 1, 1, 1, 1, 1, 1 }));

        }
        public static int isOneBalanced(int[] a)
        {
            int beginIndexOfOne = -1;
            int endIndexOfOne = -1;
            bool begin =  false;
            int c = 0;
            if (a.Length == 0) return 1;
            for (int i = 0; i < a.Length; i++)
            {
                if (a[i] == 1)
                {
                    c++;
                }
            }
            if (c == a.Length ) return 0;
        
            for (int i = 0; i < a.Length; i++)
            {
                if (a[i] == 1)
                {
                    if (beginIndexOfOne != -1)
                    {
                        begin = true;
                    }

                    if (beginIndexOfOne == -1)
                    {
                        while (a[i] == 1)
                        {
                            beginIndexOfOne = i;
                            if (i < a.Length - 1)
                            {
                                i++;
                            }
                            else
                            {
                                break;
                            }
                        }
                    }

                    if (begin)
                    {
                        if (beginIndexOfOne >= 0)
                        {
                            while (a[i] == 1)
                            {
                                endIndexOfOne = i;
                                if (i < a.Length - 1)
                                {
                                    i++;
                                }
                                else
                                {
                                    break;
                                }
                            }
                        }
                        if (beginIndexOfOne >= 0 && endIndexOfOne == a.Length - 1)
                        {
                            return 1;
                        }
                        else
                        {
                            return 0;
                        }
                    }
                }
               
            }
            if (beginIndexOfOne != -1 && endIndexOfOne == -1)
            {
                return 1;

            }
            else
            {
                return 0;
            }
        }
    

    }